name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Git for Windows SDK
      # You may pin to the exact commit or the version.
      # uses: git-for-windows/setup-git-for-windows-sdk@cd2fc65085a5ceb095576ff6f5accbfbe693ed23
      uses: git-for-windows/setup-git-for-windows-sdk@v0.0.9
      with:
        # The subset (if any) of the SDK: minimal, makepkg-git, build-installers, or full
        flavor: minimal

        architecture: i686

        path:

        verbose:

        cache: auto
    
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1
      
    - name: Cache
      uses: actions/cache@v2.1.4
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: ./boost/
        # An explicit key for restoring and saving the cache
        key: ${{ runner.OS }}-boost-${{ hashFiles('**/bootstrap.bat') }}
        restore-keys: |
          ${{ runner.OS }}-boost-
        # The chunk size used to split up large files during upload, in bytes
        upload-chunk-size: # optional

    - name: init-dep
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: git submodule update --init --recursive
      
    - name: build-boost
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: call "${{env.GITHUB_WORKSPACE}}/build-boost.bat"

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: MSBuild.exe CGAssistant.sln /t:CGAHook /p:Configuration=Release /p:Platform="x86" /p:PlatformToolset=v141
